---
# if you have any prepararion task
- name: "Prepare"
  hosts: "all"
  gather_facts: true
  tasks:

    - name: "Include cryptographic content var file"
      ansible.builtin.include_vars: "../../tests/certs/main.yml"

    - name: "Include labocbz.prepare_host"
      tags:
        - "labocbz.prepare_host"
      vars:
        prepare_host_system_users: "{{ inv_prepare_host_system_users }}"
      ansible.builtin.include_role:
        name: "labocbz.prepare_host"

    - name: "Edit /etc/hosts file to add all hosts"
      loop: "{{ groups['all'] }}"
      loop_control:
        loop_var: host
      register: output
      changed_when: output.rc != 0
      when: host != ansible_host
      ansible.builtin.shell: "echo \"{{ hostvars[host]['ansible_default_ipv4']['address'] }}  {{ host }} # from Molecule\" >> /etc/hosts"

    - name: "Import cryptographic content if needed (cert)"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined and bundle.type == "cert"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}.zip"
        dest: "/tmp/{{ bundle.name }}.zip"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Import cryptographic content if needed (CA)"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined and bundle.type == "CA"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}"
        dest: "/tmp/{{ bundle.name }}"
        owner: "root"
        group: "root"
        mode: 0700

    - name: "Include labocbz.add_certificates"
      tags:
        - "labocbz.add_certificates"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined
      vars:
        add_certificates_bundle_name: "{{ bundle.name }}"
        add_certificates_bundle_type: "{{ bundle.type }}"
        add_certificates_bundle_src: "{{ bundle.src }}"
        add_certificates_bundle_dest: "{{ bundle.dest }}"
        #add_certificates_bundle_src_user: "{{ bundle.src_user }}"
        #add_certificates_bundle_src_password: "{{ bundle.src_password }}"
        add_certificates_bundle_dest_user: "{{ bundle.dest_user }}"
        add_certificates_bundle_dest_group: "{{ bundle.dest_group }}"
        add_certificates_bundle_dest_mode: "{{ bundle.dest_mode }}"
      ansible.builtin.include_role:
        name: "labocbz.add_certificates"

    - name: "Include labocbz.install_haproxy"
      tags:
        - "labocbz.install_haproxy"
      vars:
        add_haproxy_http_confs_path: "{{ inv_add_haproxy_http_confs_path }}"
        add_haproxy_http_confs_confs_path: "{{ inv_add_haproxy_http_confs_confs_path }}"
        add_haproxy_http_confs_error_path: "{{ inv_add_haproxy_http_confs_error_path }}"
        add_haproxy_http_confs_ssl_path: "{{ inv_add_haproxy_http_confs_ssl_path }}"
        add_haproxy_http_confs_error_files: "{{ inv_add_haproxy_http_confs_error_files }}"
        add_haproxy_http_confs_listen_stats: "{{ inv_add_haproxy_http_confs_listen_stats }}"
        add_haproxy_http_confs_listen_stats_port: "{{ inv_add_haproxy_http_confs_listen_stats_port }}"
        add_haproxy_http_confs_listen_stats_uri: "{{ inv_add_haproxy_http_confs_listen_stats_uri }}"
        add_haproxy_http_confs_stats_login: "{{ inv_add_haproxy_http_confs_stats_login }}"
        add_haproxy_http_confs_stats_password: "{{ inv_add_haproxy_http_confs_stats_password }}"
        add_haproxy_http_confs_listen_stats_https: "{{ inv_add_haproxy_http_confs_listen_stats_https }}"
        add_haproxy_http_confs_listen_stats_cert: "{{ inv_add_haproxy_http_confs_listen_stats_cert }}"
        add_haproxy_http_confs_listen_stats_key: "{{ inv_add_haproxy_http_confs_listen_stats_key }}"
      ansible.builtin.include_role:
        name: "labocbz.install_haproxy"
