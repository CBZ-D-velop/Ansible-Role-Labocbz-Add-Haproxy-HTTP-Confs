---
# if you have any prepararion task
- name: "Prepare"
  hosts: "cicd-debian-12"
  gather_facts: true
  tasks:

    - name: "Include cryptographic content var file"
      ansible.builtin.include_vars: "../../tests/certs/main.yml"

    - name: "Include labocbz.prepare_host"
      tags:
        - "labocbz.prepare_host"
      vars:
        prepare_host__system_users: "{{ inv_prepare_host__system_users }}"
      ansible.builtin.include_role:
        name: "labocbz.prepare_host"

    - name: "Gather facts from all hosts"
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['cicd-debian-12'] }}"
      ansible.builtin.setup:

    - name: "Edit /etc/hosts file to add all hosts"
      loop: "{{ groups['cicd-debian-12'] }}"
      loop_control:
        loop_var: host
      register: output
      changed_when: output.rc != 0
      ansible.builtin.shell: "echo \"{{ hostvars[host]['ansible_default_ipv4']['address'] }}  {{ host }} # from Molecule\" >> /etc/hosts"

    - name: "Import cryptographic content if needed (cert)"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined and bundle.type == "cert"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}.zip"
        dest: "/tmp/{{ bundle.name }}.zip"
        owner: "root"
        group: "root"
        mode: "0700"

    - name: "Import cryptographic content if needed (CA)"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined and bundle.type == "CA"
      ansible.builtin.copy:
        src: "../../tests/certs/{{ bundle.name }}"
        dest: "/tmp/{{ bundle.name }}"
        owner: "root"
        group: "root"
        mode: "0700"

    - name: "Include labocbz.add_certificates"
      tags:
        - "labocbz.add_certificates"
      loop: "{{ inv_cert_bundles }}"
      loop_control:
        loop_var: bundle
      when: inv_cert_bundles is defined
      vars:
        add_certificates__bundle_name: "{{ bundle.name }}"
        add_certificates__bundle_type: "{{ bundle.type }}"
        add_certificates__bundle_src: "{{ bundle.src }}"
        add_certificates__bundle_dest: "{{ bundle.dest }}"
        #add_certificates__bundle_src_user: "{{ bundle.src_user }}"
        #add_certificates__bundle_src_password: "{{ bundle.src_password }}"
        add_certificates__bundle_dest_user: "{{ bundle.dest_user }}"
        add_certificates__bundle_dest_group: "{{ bundle.dest_group }}"
        add_certificates__bundle_dest_mode: "{{ bundle.dest_mode }}"
      ansible.builtin.include_role:
        name: "labocbz.add_certificates"

    - name: "Include labocbz.install_haproxy"
      tags:
        - "labocbz.install_haproxy"
      vars:
        install_haproxy__path: "{{ inv_install_haproxy__path }}"
        install_haproxy__confs_path: "{{ inv_install_haproxy__confs_path }}"
        install_haproxy__error_path: "{{ inv_install_haproxy__error_path }}"
        install_haproxy__ssl_path: "{{ inv_install_haproxy__ssl_path }}"
        install_haproxy__error_files: "{{ inv_install_haproxy__error_files }}"
        install_haproxy__listen_stats: "{{ inv_install_haproxy__listen_stats }}"
        install_haproxy__listen_stats_port: "{{ inv_install_haproxy__listen_stats_port }}"
        install_haproxy__listen_stats_uri: "{{ inv_install_haproxy__listen_stats_uri }}"
        install_haproxy__stats_login: "{{ inv_install_haproxy__stats_login }}"
        install_haproxy__stats_password: "{{ inv_install_haproxy__stats_password }}"
        install_haproxy__listen_stats_https: "{{ inv_install_haproxy__listen_stats_https }}"
        install_haproxy__listen_stats_cert: "{{ inv_install_haproxy__listen_stats_cert }}"
        install_haproxy__listen_stats_key: "{{ inv_install_haproxy__listen_stats_key }}"
      ansible.builtin.include_role:
        name: "labocbz.install_haproxy"
